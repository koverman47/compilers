# Generated from Tiny.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2+")
        buf.write("\u017c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5")
        buf.write("\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22")
        buf.write("\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3$\6$\u00e1")
        buf.write("\n$\r$\16$\u00e2\3%\7%\u00e6\n%\f%\16%\u00e9\13%\3%\3")
        buf.write("%\6%\u00ed\n%\r%\16%\u00ee\3&\3&\7&\u00f3\n&\f&\16&\u00f6")
        buf.write("\13&\3&\3&\3\'\3\'\3\'\3\'\7\'\u00fe\n\'\f\'\16\'\u0101")
        buf.write("\13\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\5(\u0164\n(\3)\6)\u0167")
        buf.write("\n)\r)\16)\u0168\3)\7)\u016c\n)\f)\16)\u016f\13)\3*\3")
        buf.write("*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u017b\n*\4\u00f4\u00ff\2")
        buf.write("+\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+\3\2\b\5\2\13\f\17\17\"\"\3\2\62;\4\2C\\c|\5\2\62")
        buf.write(";C\\c|\6\2,-//\61\61??\6\2*+..=>@@\2\u0198\2\3\3\2\2\2")
        buf.write("\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r")
        buf.write("\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3")
        buf.write("\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2")
        buf.write("\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'")
        buf.write("\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2")
        buf.write("\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29")
        buf.write("\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2")
        buf.write("C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2")
        buf.write("\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\3U\3\2\2")
        buf.write("\2\5]\3\2\2\2\7c\3\2\2\2\tg\3\2\2\2\13n\3\2\2\2\rq\3\2")
        buf.write("\2\2\17s\3\2\2\2\21y\3\2\2\2\23}\3\2\2\2\25\u0082\3\2")
        buf.write("\2\2\27\u0084\3\2\2\2\31\u0086\3\2\2\2\33\u0088\3\2\2")
        buf.write("\2\35\u0091\3\2\2\2\37\u0096\3\2\2\2!\u009c\3\2\2\2#\u00a3")
        buf.write("\3\2\2\2%\u00a5\3\2\2\2\'\u00a7\3\2\2\2)\u00a9\3\2\2\2")
        buf.write("+\u00ab\3\2\2\2-\u00ae\3\2\2\2/\u00b4\3\2\2\2\61\u00b9")
        buf.write("\3\2\2\2\63\u00bb\3\2\2\2\65\u00bd\3\2\2\2\67\u00bf\3")
        buf.write("\2\2\29\u00c2\3\2\2\2;\u00c5\3\2\2\2=\u00c8\3\2\2\2?\u00ce")
        buf.write("\3\2\2\2A\u00d7\3\2\2\2C\u00d9\3\2\2\2E\u00db\3\2\2\2")
        buf.write("G\u00e0\3\2\2\2I\u00e7\3\2\2\2K\u00f0\3\2\2\2M\u00f9\3")
        buf.write("\2\2\2O\u0163\3\2\2\2Q\u0166\3\2\2\2S\u017a\3\2\2\2UV")
        buf.write("\7R\2\2VW\7T\2\2WX\7Q\2\2XY\7I\2\2YZ\7T\2\2Z[\7C\2\2[")
        buf.write("\\\7O\2\2\\\4\3\2\2\2]^\7D\2\2^_\7G\2\2_`\7I\2\2`a\7K")
        buf.write("\2\2ab\7P\2\2b\6\3\2\2\2cd\7G\2\2de\7P\2\2ef\7F\2\2f\b")
        buf.write("\3\2\2\2gh\7U\2\2hi\7V\2\2ij\7T\2\2jk\7K\2\2kl\7P\2\2")
        buf.write("lm\7I\2\2m\n\3\2\2\2no\7<\2\2op\7?\2\2p\f\3\2\2\2qr\7")
        buf.write("=\2\2r\16\3\2\2\2st\7H\2\2tu\7N\2\2uv\7Q\2\2vw\7C\2\2")
        buf.write("wx\7V\2\2x\20\3\2\2\2yz\7K\2\2z{\7P\2\2{|\7V\2\2|\22\3")
        buf.write("\2\2\2}~\7X\2\2~\177\7Q\2\2\177\u0080\7K\2\2\u0080\u0081")
        buf.write("\7F\2\2\u0081\24\3\2\2\2\u0082\u0083\7.\2\2\u0083\26\3")
        buf.write("\2\2\2\u0084\u0085\7*\2\2\u0085\30\3\2\2\2\u0086\u0087")
        buf.write("\7+\2\2\u0087\32\3\2\2\2\u0088\u0089\7H\2\2\u0089\u008a")
        buf.write("\7W\2\2\u008a\u008b\7P\2\2\u008b\u008c\7E\2\2\u008c\u008d")
        buf.write("\7V\2\2\u008d\u008e\7K\2\2\u008e\u008f\7Q\2\2\u008f\u0090")
        buf.write("\7P\2\2\u0090\34\3\2\2\2\u0091\u0092\7T\2\2\u0092\u0093")
        buf.write("\7G\2\2\u0093\u0094\7C\2\2\u0094\u0095\7F\2\2\u0095\36")
        buf.write("\3\2\2\2\u0096\u0097\7Y\2\2\u0097\u0098\7T\2\2\u0098\u0099")
        buf.write("\7K\2\2\u0099\u009a\7V\2\2\u009a\u009b\7G\2\2\u009b \3")
        buf.write("\2\2\2\u009c\u009d\7T\2\2\u009d\u009e\7G\2\2\u009e\u009f")
        buf.write("\7V\2\2\u009f\u00a0\7W\2\2\u00a0\u00a1\7T\2\2\u00a1\u00a2")
        buf.write("\7P\2\2\u00a2\"\3\2\2\2\u00a3\u00a4\7-\2\2\u00a4$\3\2")
        buf.write("\2\2\u00a5\u00a6\7/\2\2\u00a6&\3\2\2\2\u00a7\u00a8\7,")
        buf.write("\2\2\u00a8(\3\2\2\2\u00a9\u00aa\7\61\2\2\u00aa*\3\2\2")
        buf.write("\2\u00ab\u00ac\7K\2\2\u00ac\u00ad\7H\2\2\u00ad,\3\2\2")
        buf.write("\2\u00ae\u00af\7G\2\2\u00af\u00b0\7P\2\2\u00b0\u00b1\7")
        buf.write("F\2\2\u00b1\u00b2\7K\2\2\u00b2\u00b3\7H\2\2\u00b3.\3\2")
        buf.write("\2\2\u00b4\u00b5\7G\2\2\u00b5\u00b6\7N\2\2\u00b6\u00b7")
        buf.write("\7U\2\2\u00b7\u00b8\7G\2\2\u00b8\60\3\2\2\2\u00b9\u00ba")
        buf.write("\7>\2\2\u00ba\62\3\2\2\2\u00bb\u00bc\7@\2\2\u00bc\64\3")
        buf.write("\2\2\2\u00bd\u00be\7?\2\2\u00be\66\3\2\2\2\u00bf\u00c0")
        buf.write("\7#\2\2\u00c0\u00c1\7?\2\2\u00c18\3\2\2\2\u00c2\u00c3")
        buf.write("\7>\2\2\u00c3\u00c4\7?\2\2\u00c4:\3\2\2\2\u00c5\u00c6")
        buf.write("\7@\2\2\u00c6\u00c7\7?\2\2\u00c7<\3\2\2\2\u00c8\u00c9")
        buf.write("\7Y\2\2\u00c9\u00ca\7J\2\2\u00ca\u00cb\7K\2\2\u00cb\u00cc")
        buf.write("\7N\2\2\u00cc\u00cd\7G\2\2\u00cd>\3\2\2\2\u00ce\u00cf")
        buf.write("\7G\2\2\u00cf\u00d0\7P\2\2\u00d0\u00d1\7F\2\2\u00d1\u00d2")
        buf.write("\7Y\2\2\u00d2\u00d3\7J\2\2\u00d3\u00d4\7K\2\2\u00d4\u00d5")
        buf.write("\7N\2\2\u00d5\u00d6\7G\2\2\u00d6@\3\2\2\2\u00d7\u00d8")
        buf.write("\5Q)\2\u00d8B\3\2\2\2\u00d9\u00da\5K&\2\u00daD\3\2\2\2")
        buf.write("\u00db\u00dc\t\2\2\2\u00dc\u00dd\3\2\2\2\u00dd\u00de\b")
        buf.write("#\2\2\u00deF\3\2\2\2\u00df\u00e1\t\3\2\2\u00e0\u00df\3")
        buf.write("\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2\u00e3")
        buf.write("\3\2\2\2\u00e3H\3\2\2\2\u00e4\u00e6\t\3\2\2\u00e5\u00e4")
        buf.write("\3\2\2\2\u00e6\u00e9\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e7")
        buf.write("\u00e8\3\2\2\2\u00e8\u00ea\3\2\2\2\u00e9\u00e7\3\2\2\2")
        buf.write("\u00ea\u00ec\7\60\2\2\u00eb\u00ed\t\3\2\2\u00ec\u00eb")
        buf.write("\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ee")
        buf.write("\u00ef\3\2\2\2\u00efJ\3\2\2\2\u00f0\u00f4\7$\2\2\u00f1")
        buf.write("\u00f3\13\2\2\2\u00f2\u00f1\3\2\2\2\u00f3\u00f6\3\2\2")
        buf.write("\2\u00f4\u00f5\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f5\u00f7")
        buf.write("\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f7\u00f8\7$\2\2\u00f8")
        buf.write("L\3\2\2\2\u00f9\u00fa\7/\2\2\u00fa\u00fb\7/\2\2\u00fb")
        buf.write("\u00ff\3\2\2\2\u00fc\u00fe\13\2\2\2\u00fd\u00fc\3\2\2")
        buf.write("\2\u00fe\u0101\3\2\2\2\u00ff\u0100\3\2\2\2\u00ff\u00fd")
        buf.write("\3\2\2\2\u0100\u0102\3\2\2\2\u0101\u00ff\3\2\2\2\u0102")
        buf.write("\u0103\7\f\2\2\u0103\u0104\3\2\2\2\u0104\u0105\b\'\2\2")
        buf.write("\u0105N\3\2\2\2\u0106\u0107\7R\2\2\u0107\u0108\7T\2\2")
        buf.write("\u0108\u0109\7Q\2\2\u0109\u010a\7I\2\2\u010a\u010b\7T")
        buf.write("\2\2\u010b\u010c\7C\2\2\u010c\u0164\7O\2\2\u010d\u010e")
        buf.write("\7D\2\2\u010e\u010f\7G\2\2\u010f\u0110\7I\2\2\u0110\u0111")
        buf.write("\7K\2\2\u0111\u0164\7P\2\2\u0112\u0113\7G\2\2\u0113\u0114")
        buf.write("\7P\2\2\u0114\u0164\7F\2\2\u0115\u0116\7H\2\2\u0116\u0117")
        buf.write("\7W\2\2\u0117\u0118\7P\2\2\u0118\u0119\7E\2\2\u0119\u011a")
        buf.write("\7V\2\2\u011a\u011b\7K\2\2\u011b\u011c\7Q\2\2\u011c\u0164")
        buf.write("\7P\2\2\u011d\u011e\7T\2\2\u011e\u011f\7G\2\2\u011f\u0120")
        buf.write("\7C\2\2\u0120\u0164\7F\2\2\u0121\u0122\7Y\2\2\u0122\u0123")
        buf.write("\7T\2\2\u0123\u0124\7K\2\2\u0124\u0125\7V\2\2\u0125\u0164")
        buf.write("\7G\2\2\u0126\u0127\7K\2\2\u0127\u0164\7H\2\2\u0128\u0129")
        buf.write("\7G\2\2\u0129\u012a\7N\2\2\u012a\u012b\7U\2\2\u012b\u0164")
        buf.write("\7G\2\2\u012c\u012d\7G\2\2\u012d\u012e\7P\2\2\u012e\u012f")
        buf.write("\7F\2\2\u012f\u0130\7K\2\2\u0130\u0164\7H\2\2\u0131\u0132")
        buf.write("\7Y\2\2\u0132\u0133\7J\2\2\u0133\u0134\7K\2\2\u0134\u0135")
        buf.write("\7N\2\2\u0135\u0164\7G\2\2\u0136\u0137\7G\2\2\u0137\u0138")
        buf.write("\7P\2\2\u0138\u0139\7F\2\2\u0139\u013a\7Y\2\2\u013a\u013b")
        buf.write("\7J\2\2\u013b\u013c\7K\2\2\u013c\u013d\7N\2\2\u013d\u0164")
        buf.write("\7G\2\2\u013e\u013f\7E\2\2\u013f\u0140\7Q\2\2\u0140\u0141")
        buf.write("\7P\2\2\u0141\u0142\7V\2\2\u0142\u0143\7K\2\2\u0143\u0144")
        buf.write("\7P\2\2\u0144\u0145\7W\2\2\u0145\u0164\7G\2\2\u0146\u0147")
        buf.write("\7D\2\2\u0147\u0148\7T\2\2\u0148\u0149\7G\2\2\u0149\u014a")
        buf.write("\7C\2\2\u014a\u0164\7M\2\2\u014b\u014c\7T\2\2\u014c\u014d")
        buf.write("\7G\2\2\u014d\u014e\7V\2\2\u014e\u014f\7W\2\2\u014f\u0150")
        buf.write("\7T\2\2\u0150\u0164\7P\2\2\u0151\u0152\7K\2\2\u0152\u0153")
        buf.write("\7P\2\2\u0153\u0164\7V\2\2\u0154\u0155\7X\2\2\u0155\u0156")
        buf.write("\7Q\2\2\u0156\u0157\7K\2\2\u0157\u0164\7F\2\2\u0158\u0159")
        buf.write("\7U\2\2\u0159\u015a\7V\2\2\u015a\u015b\7T\2\2\u015b\u015c")
        buf.write("\7K\2\2\u015c\u015d\7P\2\2\u015d\u0164\7I\2\2\u015e\u015f")
        buf.write("\7H\2\2\u015f\u0160\7N\2\2\u0160\u0161\7Q\2\2\u0161\u0162")
        buf.write("\7C\2\2\u0162\u0164\7V\2\2\u0163\u0106\3\2\2\2\u0163\u010d")
        buf.write("\3\2\2\2\u0163\u0112\3\2\2\2\u0163\u0115\3\2\2\2\u0163")
        buf.write("\u011d\3\2\2\2\u0163\u0121\3\2\2\2\u0163\u0126\3\2\2\2")
        buf.write("\u0163\u0128\3\2\2\2\u0163\u012c\3\2\2\2\u0163\u0131\3")
        buf.write("\2\2\2\u0163\u0136\3\2\2\2\u0163\u013e\3\2\2\2\u0163\u0146")
        buf.write("\3\2\2\2\u0163\u014b\3\2\2\2\u0163\u0151\3\2\2\2\u0163")
        buf.write("\u0154\3\2\2\2\u0163\u0158\3\2\2\2\u0163\u015e\3\2\2\2")
        buf.write("\u0164P\3\2\2\2\u0165\u0167\t\4\2\2\u0166\u0165\3\2\2")
        buf.write("\2\u0167\u0168\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169")
        buf.write("\3\2\2\2\u0169\u016d\3\2\2\2\u016a\u016c\t\5\2\2\u016b")
        buf.write("\u016a\3\2\2\2\u016c\u016f\3\2\2\2\u016d\u016b\3\2\2\2")
        buf.write("\u016d\u016e\3\2\2\2\u016eR\3\2\2\2\u016f\u016d\3\2\2")
        buf.write("\2\u0170\u0171\7<\2\2\u0171\u017b\7?\2\2\u0172\u017b\t")
        buf.write("\6\2\2\u0173\u0174\7#\2\2\u0174\u017b\7?\2\2\u0175\u017b")
        buf.write("\t\7\2\2\u0176\u0177\7>\2\2\u0177\u017b\7?\2\2\u0178\u0179")
        buf.write("\7@\2\2\u0179\u017b\7?\2\2\u017a\u0170\3\2\2\2\u017a\u0172")
        buf.write("\3\2\2\2\u017a\u0173\3\2\2\2\u017a\u0175\3\2\2\2\u017a")
        buf.write("\u0176\3\2\2\2\u017a\u0178\3\2\2\2\u017bT\3\2\2\2\f\2")
        buf.write("\u00e2\u00e7\u00ee\u00f4\u00ff\u0163\u0168\u016d\u017a")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class TinyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    ID = 32
    STR = 33
    WS = 34
    INTLITERAL = 35
    FLOATLITERAL = 36
    STRINGLITERAL = 37
    COMMENT = 38
    KEYWORD = 39
    IDENTIFIER = 40
    OPERATOR = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'PROGRAM'", "'BEGIN'", "'END'", "'STRING'", "':='", "';'", 
            "'FLOAT'", "'INT'", "'VOID'", "','", "'('", "')'", "'FUNCTION'", 
            "'READ'", "'WRITE'", "'RETURN'", "'+'", "'-'", "'*'", "'/'", 
            "'IF'", "'ENDIF'", "'ELSE'", "'<'", "'>'", "'='", "'!='", "'<='", 
            "'>='", "'WHILE'", "'ENDWHILE'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "STR", "WS", "INTLITERAL", "FLOATLITERAL", "STRINGLITERAL", 
            "COMMENT", "KEYWORD", "IDENTIFIER", "OPERATOR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "ID", "STR", 
                  "WS", "INTLITERAL", "FLOATLITERAL", "STRINGLITERAL", "COMMENT", 
                  "KEYWORD", "IDENTIFIER", "OPERATOR" ]

    grammarFileName = "Tiny.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


